Grammar

    0 $accept: program $end

    1 program: program expr ';' '\n'
    2        | program stmt_list '\n'
    3        | %empty

    4 stmt_list: stmt_list stmt ';'
    5          | stmt ';'

    6 stmt: ID ASGN expr
    7     | READ '(' ID ')'
    8     | WRITE '(' expr ')'
    9     | IF '(' expr ')' THEN stmt_list ENDIF
   10     | IF '(' expr ')' THEN stmt_list ELSE stmt_list ENDIF
   11     | WHILE '(' expr ')' THEN stmt_list ENDWHILE

   12 expr: NUM
   13     | ID
   14     | expr PLUS expr
   15     | expr MINUS expr
   16     | expr MUL expr
   17     | expr DIV expr
   18     | expr L expr
   19     | expr G expr
   20     | expr LE expr
   21     | expr GE expr
   22     | expr EQ expr
   23     | expr NE expr
   24     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1 2
'(' (40) 7 8 9 10 11 24
')' (41) 7 8 9 10 11 24
';' (59) 1 4 5
error (256)
MUL (258) 16
PLUS (259) 14
MINUS (260) 15
DIV (261) 17
READ (262) 7
WRITE (263) 8
ASGN (264) 6
IF (265) 9 10
THEN (266) 9 10 11
ELSE (267) 10
ENDIF (268) 9 10
L (269) 18
G (270) 19
LE (271) 20
GE (272) 21
NE (273) 23
EQ (274) 22
WHILE (275) 11
ENDWHILE (276) 11
NUM (277) 12
ID (278) 6 7 13


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
program (29)
    on left: 1 2 3, on right: 0 1 2
stmt_list (30)
    on left: 4 5, on right: 2 4 9 10 11
stmt (31)
    on left: 6 7 8 9 10 11, on right: 4 5
expr (32)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24, on right: 1 6
    8 9 10 11 14 15 16 17 18 19 20 21 22 23 24


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . expr ';' '\n'
    2        | program . stmt_list '\n'

    $end   shift, and go to state 2
    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    IF     shift, and go to state 5
    WHILE  shift, and go to state 6
    NUM    shift, and go to state 7
    ID     shift, and go to state 8
    '('    shift, and go to state 9

    stmt_list  go to state 10
    stmt       go to state 11
    expr       go to state 12


State 2

    0 $accept: program $end .

    $default  accept


State 3

    7 stmt: READ . '(' ID ')'

    '('  shift, and go to state 13


State 4

    8 stmt: WRITE . '(' expr ')'

    '('  shift, and go to state 14


State 5

    9 stmt: IF . '(' expr ')' THEN stmt_list ENDIF
   10     | IF . '(' expr ')' THEN stmt_list ELSE stmt_list ENDIF

    '('  shift, and go to state 15


State 6

   11 stmt: WHILE . '(' expr ')' THEN stmt_list ENDWHILE

    '('  shift, and go to state 16


State 7

   12 expr: NUM .

    $default  reduce using rule 12 (expr)


State 8

    6 stmt: ID . ASGN expr
   13 expr: ID .

    ASGN  shift, and go to state 17

    $default  reduce using rule 13 (expr)


State 9

   24 expr: '(' . expr ')'

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 19


State 10

    2 program: program stmt_list . '\n'
    4 stmt_list: stmt_list . stmt ';'

    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    IF     shift, and go to state 5
    WHILE  shift, and go to state 6
    ID     shift, and go to state 20
    '\n'   shift, and go to state 21

    stmt  go to state 22


State 11

    5 stmt_list: stmt . ';'

    ';'  shift, and go to state 23


State 12

    1 program: program expr . ';' '\n'
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . L expr
   19     | expr . G expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . EQ expr
   23     | expr . NE expr

    MUL    shift, and go to state 24
    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    DIV    shift, and go to state 27
    L      shift, and go to state 28
    G      shift, and go to state 29
    LE     shift, and go to state 30
    GE     shift, and go to state 31
    NE     shift, and go to state 32
    EQ     shift, and go to state 33
    ';'    shift, and go to state 34


State 13

    7 stmt: READ '(' . ID ')'

    ID  shift, and go to state 35


State 14

    8 stmt: WRITE '(' . expr ')'

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 36


State 15

    9 stmt: IF '(' . expr ')' THEN stmt_list ENDIF
   10     | IF '(' . expr ')' THEN stmt_list ELSE stmt_list ENDIF

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 37


State 16

   11 stmt: WHILE '(' . expr ')' THEN stmt_list ENDWHILE

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 38


State 17

    6 stmt: ID ASGN . expr

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 39


State 18

   13 expr: ID .

    $default  reduce using rule 13 (expr)


State 19

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . L expr
   19     | expr . G expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . EQ expr
   23     | expr . NE expr
   24     | '(' expr . ')'

    MUL    shift, and go to state 24
    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    DIV    shift, and go to state 27
    L      shift, and go to state 28
    G      shift, and go to state 29
    LE     shift, and go to state 30
    GE     shift, and go to state 31
    NE     shift, and go to state 32
    EQ     shift, and go to state 33
    ')'    shift, and go to state 40


State 20

    6 stmt: ID . ASGN expr

    ASGN  shift, and go to state 17


State 21

    2 program: program stmt_list '\n' .

    $default  reduce using rule 2 (program)


State 22

    4 stmt_list: stmt_list stmt . ';'

    ';'  shift, and go to state 41


State 23

    5 stmt_list: stmt ';' .

    $default  reduce using rule 5 (stmt_list)


State 24

   16 expr: expr MUL . expr

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 42


State 25

   14 expr: expr PLUS . expr

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 43


State 26

   15 expr: expr MINUS . expr

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 44


State 27

   17 expr: expr DIV . expr

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 45


State 28

   18 expr: expr L . expr

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 46


State 29

   19 expr: expr G . expr

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 47


State 30

   20 expr: expr LE . expr

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 48


State 31

   21 expr: expr GE . expr

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 49


State 32

   23 expr: expr NE . expr

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 50


State 33

   22 expr: expr EQ . expr

    NUM  shift, and go to state 7
    ID   shift, and go to state 18
    '('  shift, and go to state 9

    expr  go to state 51


State 34

    1 program: program expr ';' . '\n'

    '\n'  shift, and go to state 52


State 35

    7 stmt: READ '(' ID . ')'

    ')'  shift, and go to state 53


State 36

    8 stmt: WRITE '(' expr . ')'
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . L expr
   19     | expr . G expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . EQ expr
   23     | expr . NE expr

    MUL    shift, and go to state 24
    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    DIV    shift, and go to state 27
    L      shift, and go to state 28
    G      shift, and go to state 29
    LE     shift, and go to state 30
    GE     shift, and go to state 31
    NE     shift, and go to state 32
    EQ     shift, and go to state 33
    ')'    shift, and go to state 54


State 37

    9 stmt: IF '(' expr . ')' THEN stmt_list ENDIF
   10     | IF '(' expr . ')' THEN stmt_list ELSE stmt_list ENDIF
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . L expr
   19     | expr . G expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . EQ expr
   23     | expr . NE expr

    MUL    shift, and go to state 24
    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    DIV    shift, and go to state 27
    L      shift, and go to state 28
    G      shift, and go to state 29
    LE     shift, and go to state 30
    GE     shift, and go to state 31
    NE     shift, and go to state 32
    EQ     shift, and go to state 33
    ')'    shift, and go to state 55


State 38

   11 stmt: WHILE '(' expr . ')' THEN stmt_list ENDWHILE
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . L expr
   19     | expr . G expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . EQ expr
   23     | expr . NE expr

    MUL    shift, and go to state 24
    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    DIV    shift, and go to state 27
    L      shift, and go to state 28
    G      shift, and go to state 29
    LE     shift, and go to state 30
    GE     shift, and go to state 31
    NE     shift, and go to state 32
    EQ     shift, and go to state 33
    ')'    shift, and go to state 56


State 39

    6 stmt: ID ASGN expr .
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . L expr
   19     | expr . G expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . EQ expr
   23     | expr . NE expr

    MUL    shift, and go to state 24
    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    DIV    shift, and go to state 27
    L      shift, and go to state 28
    G      shift, and go to state 29
    LE     shift, and go to state 30
    GE     shift, and go to state 31
    NE     shift, and go to state 32
    EQ     shift, and go to state 33

    $default  reduce using rule 6 (stmt)


State 40

   24 expr: '(' expr ')' .

    $default  reduce using rule 24 (expr)


State 41

    4 stmt_list: stmt_list stmt ';' .

    $default  reduce using rule 4 (stmt_list)


State 42

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   16     | expr MUL expr .
   17     | expr . DIV expr
   18     | expr . L expr
   19     | expr . G expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . EQ expr
   23     | expr . NE expr

    $default  reduce using rule 16 (expr)


State 43

   14 expr: expr . PLUS expr
   14     | expr PLUS expr .
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . L expr
   19     | expr . G expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . EQ expr
   23     | expr . NE expr

    MUL  shift, and go to state 24
    DIV  shift, and go to state 27

    $default  reduce using rule 14 (expr)


State 44

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   15     | expr MINUS expr .
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . L expr
   19     | expr . G expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . EQ expr
   23     | expr . NE expr

    MUL  shift, and go to state 24
    DIV  shift, and go to state 27

    $default  reduce using rule 15 (expr)


State 45

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   17     | expr DIV expr .
   18     | expr . L expr
   19     | expr . G expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . EQ expr
   23     | expr . NE expr

    $default  reduce using rule 17 (expr)


State 46

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . L expr
   18     | expr L expr .
   19     | expr . G expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . EQ expr
   23     | expr . NE expr

    MUL    shift, and go to state 24
    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    DIV    shift, and go to state 27

    L   error (nonassociative)
    G   error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EQ  error (nonassociative)

    $default  reduce using rule 18 (expr)


State 47

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . L expr
   19     | expr . G expr
   19     | expr G expr .
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . EQ expr
   23     | expr . NE expr

    MUL    shift, and go to state 24
    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    DIV    shift, and go to state 27

    L   error (nonassociative)
    G   error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EQ  error (nonassociative)

    $default  reduce using rule 19 (expr)


State 48

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . L expr
   19     | expr . G expr
   20     | expr . LE expr
   20     | expr LE expr .
   21     | expr . GE expr
   22     | expr . EQ expr
   23     | expr . NE expr

    MUL    shift, and go to state 24
    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    DIV    shift, and go to state 27

    L   error (nonassociative)
    G   error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EQ  error (nonassociative)

    $default  reduce using rule 20 (expr)


State 49

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . L expr
   19     | expr . G expr
   20     | expr . LE expr
   21     | expr . GE expr
   21     | expr GE expr .
   22     | expr . EQ expr
   23     | expr . NE expr

    MUL    shift, and go to state 24
    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    DIV    shift, and go to state 27

    L   error (nonassociative)
    G   error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EQ  error (nonassociative)

    $default  reduce using rule 21 (expr)


State 50

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . L expr
   19     | expr . G expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . EQ expr
   23     | expr . NE expr
   23     | expr NE expr .

    MUL    shift, and go to state 24
    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    DIV    shift, and go to state 27

    L   error (nonassociative)
    G   error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EQ  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 51

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . L expr
   19     | expr . G expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . EQ expr
   22     | expr EQ expr .
   23     | expr . NE expr

    MUL    shift, and go to state 24
    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26
    DIV    shift, and go to state 27

    L   error (nonassociative)
    G   error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EQ  error (nonassociative)

    $default  reduce using rule 22 (expr)


State 52

    1 program: program expr ';' '\n' .

    $default  reduce using rule 1 (program)


State 53

    7 stmt: READ '(' ID ')' .

    $default  reduce using rule 7 (stmt)


State 54

    8 stmt: WRITE '(' expr ')' .

    $default  reduce using rule 8 (stmt)


State 55

    9 stmt: IF '(' expr ')' . THEN stmt_list ENDIF
   10     | IF '(' expr ')' . THEN stmt_list ELSE stmt_list ENDIF

    THEN  shift, and go to state 57


State 56

   11 stmt: WHILE '(' expr ')' . THEN stmt_list ENDWHILE

    THEN  shift, and go to state 58


State 57

    9 stmt: IF '(' expr ')' THEN . stmt_list ENDIF
   10     | IF '(' expr ')' THEN . stmt_list ELSE stmt_list ENDIF

    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    IF     shift, and go to state 5
    WHILE  shift, and go to state 6
    ID     shift, and go to state 20

    stmt_list  go to state 59
    stmt       go to state 11


State 58

   11 stmt: WHILE '(' expr ')' THEN . stmt_list ENDWHILE

    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    IF     shift, and go to state 5
    WHILE  shift, and go to state 6
    ID     shift, and go to state 20

    stmt_list  go to state 60
    stmt       go to state 11


State 59

    4 stmt_list: stmt_list . stmt ';'
    9 stmt: IF '(' expr ')' THEN stmt_list . ENDIF
   10     | IF '(' expr ')' THEN stmt_list . ELSE stmt_list ENDIF

    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    IF     shift, and go to state 5
    ELSE   shift, and go to state 61
    ENDIF  shift, and go to state 62
    WHILE  shift, and go to state 6
    ID     shift, and go to state 20

    stmt  go to state 22


State 60

    4 stmt_list: stmt_list . stmt ';'
   11 stmt: WHILE '(' expr ')' THEN stmt_list . ENDWHILE

    READ      shift, and go to state 3
    WRITE     shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6
    ENDWHILE  shift, and go to state 63
    ID        shift, and go to state 20

    stmt  go to state 22


State 61

   10 stmt: IF '(' expr ')' THEN stmt_list ELSE . stmt_list ENDIF

    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    IF     shift, and go to state 5
    WHILE  shift, and go to state 6
    ID     shift, and go to state 20

    stmt_list  go to state 64
    stmt       go to state 11


State 62

    9 stmt: IF '(' expr ')' THEN stmt_list ENDIF .

    $default  reduce using rule 9 (stmt)


State 63

   11 stmt: WHILE '(' expr ')' THEN stmt_list ENDWHILE .

    $default  reduce using rule 11 (stmt)


State 64

    4 stmt_list: stmt_list . stmt ';'
   10 stmt: IF '(' expr ')' THEN stmt_list ELSE stmt_list . ENDIF

    READ   shift, and go to state 3
    WRITE  shift, and go to state 4
    IF     shift, and go to state 5
    ENDIF  shift, and go to state 65
    WHILE  shift, and go to state 6
    ID     shift, and go to state 20

    stmt  go to state 22


State 65

   10 stmt: IF '(' expr ')' THEN stmt_list ELSE stmt_list ENDIF .

    $default  reduce using rule 10 (stmt)
